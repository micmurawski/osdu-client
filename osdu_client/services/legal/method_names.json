{
    "get:/legaltags": [
        "list_legaltags",
        "Gets all LegalTags.",
        "This allows for the retrieval of all LegalTags."
    ],
    "put:/legaltags": [
        "update_legaltag",
        "Updates the LegalTag for the given `name`.",
        "This allows to update certain properties of your LegalTag using the `name` associated with it."
    ],
    "post:/legaltags": [
        "create_legaltag",
        "Creates the LegalTag for the given `name`.",
        "This allows for the creation of your LegalTag. There can only be 1 LegalTag per `name`. A LegalTag must be created before you can start ingesting data for that name."
    ],
    "post:/legaltags:validate": [
        "validate_legaltags",
        "Retrieves the invalid LegalTag names with reasons for the given `names`.",
        "This allows for the retrieval of the reason why your LegalTag is not valid. A maximum of 25 can be retrieved at once."
    ],
    "post:/legaltags:query": [
        "query_legaltags",
        "Retrieves the legaltags which matches search criteria or none if there is no match",
        "This allows search for specific attributes of legaltags including the attributes of extensionproperties"
    ],
    "post:/legaltags:batchRetrieve": [
        "get_batch_legaltags",
        "Retrieves the LegalTags for the given `names`.",
        "This allows for the retrieval of your LegalTags using the `name` associated with it. A maximum of 25 can be retrieved at once."
    ],
    "get:/legaltags:properties": [
        "get_legaltags_properties",
        "Gets LegalTag property values.",
        "This allows for the retrieval of allowed values for LegalTag properties."
    ],
    "get:/legaltags/{name}": [
        "get_legaltag",
        "Gets a LegalTag for the given `name`.",
        "This allows for the retrieval of your LegalTag using the `name` associated with it."
    ],
    "delete:/legaltags/{name}": [
        "delete_legaltag",
        "Deletes a LegalTag for the given `name`.",
        "This allows for the deletion of your LegalTag with the given `name`. This makes the given legaltags data invalid."
    ],
    "get:/jobs/updateLegalTagStatus": [
        "get_legaltag_compliance_job_status",
        "Check LegalTag Compliance Job Status",
        "To check LegalTag Compliance Job Status."
    ],
    "get:/info": [
        "get_info",
        "Version info",
        "For deployment available public `/info` endpoint, which provides build and git related information."
    ],
    "get:/_ah/readiness_check": [
        "get_readiness_check",
        "Readiness Check endpoint",
        "For deployment available public `/readiness_check` endpoint, which provides `Legal service is ready` message."
    ],
    "get:/_ah/liveness_check": [
        "get_liveness_check",
        "Liveness Check endpoint",
        "For deployment available public `/liveness_check` endpoint, which provides `Legal service is alive` message."
    ]
}