#  ***************************************************************************
#  Copyright 2017 - 2024, Schlumberger
#
#  Licensed under the Apache License, Version 2.0(the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  ***************************************************************************

# ===========================================================================
# Endpoints Description
# ===========================================================================

openapi: 3.0.0
info:
  title: Seismic DMS Service
  version: 3.0.0
  description: Seismic Data Management APIs to store and manage seismic datasets .
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

# ===========================================================================
# Endpoints Paths Section
# ===========================================================================

servers:
  - url: "#{SDMS_PREFIX}#"

paths:
  /svcstatus:
    get:
      summary: Seismic store service status (fast check).
      description: "<ul><li>Return the seismic store service status.</li><li>Required roles: none</li></ul>"
      security:
        - bearer: []
      operationId: service-status
      tags:
        - General
      responses:
        "200":
          description: Service status.
          content:
            application/json:
              schema:
                type: string
                example: service OK

  /svcstatus/access:
    get:
      summary: Seismic store service access check.
      description: "<ul><li>Validates if the token audience is allowed</li><li>Required roles: none</li></ul>"
      operationId: service-status-check
      tags:
        - General
      responses:
        "200":
          description: User token audience is allowed by seismic store service.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.

  /info:
    get:
      summary: Seismic store service info.
      description: "<ul><li>Return the seismic store service deployment information.</li><li>Required roles: none</li></ul>"
      security:
        - bearer: []
      operationId: service-info
      tags:
        - Info
      responses:
        "200":
          description: Service info.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Info"

  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}:
    post:
      summary: Register a new dataset.
      description: "<ul><li>Register a new dataset in the seismic store.</li><li>Required roles: subproject.admin</li></ul>"
      operationId: dataset-register
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Legal tag of the dataset.
          in: header
          name: ltag
          required: false
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetRegisterBody"
        description: Request body
      responses:
        "200":
          description: Registered dataset metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "409":
          description: Conflict.
        "423":
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are:
            <li> WL (Write Locked). </li>
            <li> RL (Read Locked). </li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.

    get:
      summary: Retrieve a dataset.
      description: "<ul>
        <li>Return the dataset metadata from seismic store.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li></ul>"
      operationId: dataset-get
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Include the seismic storage metadata record if it exists.
          in: query
          name: seismicmeta
          required: false
          schema:
            type: boolean
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
        - description: Retrieve a specific version of the seismic storage metadata record
          in: query
          name: record-version
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Metadata of the dataset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    delete:
      summary: Delete a dataset.
      description: "<ul>
        <li>Delete a dataset in the seismic store.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li></ul>"
      operationId: dataset-delete
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The resource was deleted successfully.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    patch:
      summary: Patch the dataset metadata.
      description: |
        <ul>
        <li>Update the dataset meta information in the seismic store or close (unlock) the dataset. If the endpoint is used without the close parameter, at least one body field is required or the endpoint will return an error.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li>
        <li>Patchable fields: <ul>
        <li><b>dataset_new_name:</b> new name to use for the dataset (rename).</li>
        <li><b>filemetadata:</b> This is a seismic store specific field and describes how the physical data is stored in the cloud storage system (GCS/AzureContainer etc.). This metadata is mainly used by client libraries to correctly reconstruct the dataset. For example you can store a dataset as truncated in multiple objects of 64MB each, name them from 0 to N and save the filemetadata = “{nObject: N, totalSize: 1024, objsize: 64, sizeUnit: MB}”.</li>
        <li><b>gtags:</b> Upsert tags to an existing dataset metadata. If the dataset metadata already has gtags, then new gtags are appended to this list.</li>
        <li><b>ltag:</b> Update the existing legalTag value.</b></li>
        <li><b>readonly:</b> Update the dataset mode to readonly (true) or to read/write (false).</li>
        <li><b>status:</b> Update the dataset status.</li>
        </ul></li>
        <li><b>NOTE:</b> last_modified_date is updated automatically with each metadata change through Patch endpoint calling.</li>
        </ul>
      operationId: dataset-patch
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Non null sbit value of the dataset. Using this value here will close
            the dataset.
          in: query
          name: close
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetPatch"
        description: Request body
      responses:
        "200":
          description: Metadata of the patched dataset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "409":
          description: Conflict.
        "423":
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.

  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/lock:
    put:
      summary: Acquire a lock for a dataset id.
      description: |
        <ul>
          <li>Open a dataset for read or write and lock its state.</li>
          <li>Required roles open lock for write:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
          <li>Required roles open lock for read:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
        operationId: dataset-lock
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Type of the lock which can be set to 'read' (default) or 'write'.
          in: query
          name: openmode
          required: false
          schema:
            type: string
        - description: Session identifier issued for a previous write lock acquisition
            operation.
          in: query
          name: wid
          required: false
          schema:
            type: number
      responses:
        "200":
          description: "Acquired a lock and the return value is the dataset metadata with session identifier stored in the 'sbit' attribute."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "423":
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.

  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/unlock:
    put:
      summary: Remove the lock associated with a dataset id.
      description: |
        <ul>
          <li>Removes the lock for a dataset id.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: dataset-unlock
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path for the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Removed the lock value associated with dataset id.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "423":
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked).</li>
            <li>RL (Read Locked).</li>
            <li>CL (Cannot be Locked).</li>
            <li>UL (Cannot be Unlocked).</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.

  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/permission:
    get:
      summary: Retrieve the access permissions of a user on a dataset id.
      description: |
        <ul>
          <li>Retrieve the access permission of a user on a dataset.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: dataset-permission
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path for the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User access permission on the dataset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetPermission"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/ctagcheck:
    get:
      summary: "Validate if a dataset ctag matches the pre-existing ctag in metadata catalog."
      description: "<ul><li>Check if the provided dataset cTag match the one stored in the metadata catalog.</li><li>Required roles: subproject.admin, subproject.viewer</li></ul>"
      operationId: dataset-ctag-check
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Ctag to be validated.
          in: query
          name: ctag
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Return true if the ctag is valid or false if it is invalid.
          content:
            application/json:
              schema:
                type: boolean
                example: "true"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/gtags:
    put:
      summary: Upsert tags to a dataset.
      description: |
        <ul>
          <li>Upsert tags to an existing dataset metadata. If the dataset metadata already has gtags, then  new gtags are appended to this list.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: dataset-add-tag
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Gtags array list.
          in: query
          name: gtag
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              default: tag1
      responses:
        "200":
          description: Gtags were upserted to the dataset metadata.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/dataset/{datasetid}/size:
    post:
      summary: Compute and retrieve the size of a dataset and the date of when the size
        was computed
      description: |
        <ul>
        <li>Compute and retrieve the size of a dataset and the date of when the size was computed.</li>
        <li>Required roles: subproject.admin</li></ul>
      operationId: dataset-size-post
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: path
          name: datasetid
          required: true
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Size of the dataset and the date of when the size was computed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetSize"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/size:
    get:
      summary: Retrieve the size of datasets
      description: |
        <ul>
        <li>Required roles: subproject.viewer</li></ul>
      operationId: dataset-size-get
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the dataset.
          in: query
          name: datasetid
          required: false
          schema:
            type: string
        - description: Hierarchical path of the dataset.
          in: query
          name: path
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Size of the dataset and the date of when the size was computed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputedSize"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/readdsdirfulllist:
    get:
      summary: Content list.
      description: |
        <ul>
        <li>List datasets and sub-directories for a directory path.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-read-directory
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: The tenant project name.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: The sub-project name.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: The hierarchy path.
          in: query
          name: path
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The list of datasets and directories in the requested directory path.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetAndDirectories"

  /dataset/tenant/{tenantid}/subproject/{subprojectid}:
    # This has been marked for later removal. Please utilize the 'post' version instead.
    # get:
    #   summary: Get the list of datasets in a subproject.
    #   description: |
    #     <ul>
    #       <li>Return the list of datasets in a sub-project. The list can be filtered by gtags. Support pagination.</li>
    #       <li>Required roles: subproject.admin, subproject.viewer</li>
    #     </ul>
    #   operationId: dataset-list-get
    #   tags:
    #     - Dataset
    #   parameters:
    #     - description: "Select multiple fields that belong to a dataset's metadata. (ex: select=[name,subproject...])"
    #       in: query
    #       name: select
    #       required: false
    #       schema: 
    #         type: string
    #         default: ""
    #     - description: |
    #         Select single SQL like search parameter example: search=name=file%
    #         Supported fields: name, tenant, subproject, path, ltag, created_by, gcsurl
    #       in: query
    #       name: search
    #       required: false
    #       schema:
    #         type: string
    #         default: ""
    #     - description: "The impersonation token context (required only with impersonation token credentials)"
    #       in: header
    #       name: impersonation-token-context
    #       required: false
    #       schema:
    #         type: string
    #         default: ""
    #     - description: Name of the tenant.
    #       in: path
    #       name: tenantid
    #       required: true
    #       schema:
    #         type: string
    #     - description: Name of the subproject.
    #       in: path
    #       name: subprojectid
    #       required: true
    #       schema:
    #         type: string
    #     - description: Gtags associated with dataset metadata.
    #       in: query
    #       name: gtag
    #       explode: true
    #       schema:
    #         type: array
    #         items:
    #           type: string
    #     - description: Limit the number of datasets in the response
    #       in: query
    #       name: limit
    #       schema:
    #         type: string
    #     - description: Cursor for pagination on the datasets list
    #       in: query
    #       name: cursor
    #       schema:
    #         type: string
    #     - description: translate the user-id to a more human readable user info
    #       name: translate-user-info
    #       in: query
    #       schema:
    #         type: boolean
    #         enum:
    #           - true
    #           - false
    #         default: true
    #   responses:
    #     "200":
    #       description: "Paginated dataset list with nextPageCursor. If the request does not provide limit or cursor the results will be the whole path content and the response is a plain array of datasets [ {dataset1}, {dataset2}, ... ]"
    #       content:
    #         application/json:
    #           schema:
    #             $ref: "#/components/schemas/PaginatedDatasets"
    #     "400":
    #       description: Bad request.
    #     "401":
    #       description: Unauthorized.
    #     "403":
    #       description: Forbidden.
    #     "404":
    #       description: Not found.
    post:
      summary: Get the list of datasets in a subproject.
      description:  |
        <ul>
          <li>Return the list of datasets in a sub-project. The list can be filtered by gtags. Support pagination.</li>
          <li>Required roles: subproject.admin, subproject.viewer</li>
        </ul>
      operationId: dataset-list-post
      tags:
        - Dataset
      parameters:
        - description: The impersonation token context (required only with impersonation token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetListBody"
        description: Request body
      responses:
        "200":
          description: "Paginated dataset list with nextPageCursor. If the request does not provide limit or cursor the results will be the whole path content and the response is a plain array of datasets [ {dataset1}, {dataset2}, ... ]"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedDatasets"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/exist:
    post:
      summary: Check to see if a list of datasets exists in the subproject.
      description: |
        <ul>
        <li>Check if the dataset exists.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-exist
      tags:
        - Dataset
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DatasetCheckList"
      responses:
        "200":
          description: "A list of Boolean values for all the input datasets in the request body. If a value is true, then the corresponding dataset exists and if it is false, then the dataset does not exist."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: boolean
                example:
                  - true
                  - false
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /dataset/tenant/{tenantid}/subproject/{subprojectid}/sizes:
    post:
      summary: Retrieve the size of datasets.
      description: |
        <ul>
        <li>Return a list with the sizes of the requested datasets.</li>
        <li>The correctness is not guarantee since this API returns sizes stored by the user in the dataset manifest.</li>
        <li>This API is deprecated, please using /size endpoint to compute and retrieve the size information</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: dataset-sizes
      tags:
        - Dataset(Deprecated)
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Name of the tenant
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DatasetCheckList"
      responses:
        "200":
          description: "The list of sizes of all the datasets. If the dataset does not exist, the size returns -1."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
                example:
                  - 1024
                  - -1
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.

  /utility/ls:
    get:
      summary: Retrieve the list of datasets and sub-directories inside a seismic store
        path.
      description: |
        <ul>
        <li>Return the list of datasets and sub-directories of a seismic store path.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: utility-ls-get
      tags:
        - Utility
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Seismic store path, sd://tenant/sub-project/path.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
        - description: Working mode, dirs or datasets or undefined for both.
          in: query
          name: wmode
          required: false
          schema:
            type: string
        - description: Limits the total number of datasets to return.
          in: query
          name: limit
          required: false
          schema:
            type: number
        - description: Pagination token - this query parameter can be omitted on first call.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Seismic store path content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LsDatasets"
        "201":
          description: "Paginated seismic store path content - For documentation purposes, if limit or cursor is given, status code here is 200."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LsPaginatedDatasets"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    post:
      summary: Retrieve the list of datasets and sub-directories inside a seismic store
        path.
      description: |
        <ul>
        <li>Return the list of datasets and sub-directories of a seismic store path.</li>
        <li>Required roles: subproject.admin, subproject.viewer</li></ul>
      operationId: utility-ls-post
      tags:
        - Utility
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetLsBody"
      responses:
        "200":
          description: Seismic store path content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LsDatasets"
        "201":
          description: "Paginated seismic store path content - For documentation purposes, if limit or cursor is given, status code here is 200."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LsPaginatedDatasets"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /utility/storage-tiers:
    get:
      summary: Retrieve the list of supported storage tiers
      description: "<ul><li>Return the list of storage tiers</ul>"
      operationId: utility-storage-tiers
      tags:
        - Utility
      responses:
        "200":
          description: Supported storage tiers
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /utility/cp:
    post:
      summary: Copy dataset.
      description: |
        <ul>
        <li>Copy a seismic store dataset. The source and destination dataset must be in the same sub-project.</li>
        <li>Required roles:
          <ul>
            <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
            <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
          </ul>
        </li>
        </ul>
      operationId: utility-cp
      tags:
        - Utility
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Seismic store source dataset path.
          in: query
          name: sdpath_from
          required: true
          schema:
            type: string
        - description: Seismic store destination dataset path.
          in: query
          name: sdpath_to
          required: true
          schema:
            type: string
        - description: Lock source and destination while copying.
          in: query
          name: lock
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Copy operation succeeded.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "409":
          description: Conflict.
        "423":
          description: |
            Locked. The error message contains the Reason in the form <b>[RCODE:REASON(2-char-code)TTL(sec-number)]</b>. Possible Reasons code are: <ul>
            <li>WL (Write Locked)</li>
            <li>RL (Read Locked)</li>
            <li>CL (Cannot be Locked)</li>
            <li>UL (Cannot be Unlocked)</ul>\nFor example the reason code <b>[RCODE:RL3600]</b> indicates the dataset is Read Locked with a TTL of 3600 seconds.
  
  /utility/gcs-access-token:
    get:
      summary: Generate a GCS access token.
      description: |
        <ul>
          <li>Generate a GCS access token for a specified seismic store resource. The source and destination dataset must be in the same sub-project.</li>
          <li>Required roles:
            <ul>
              <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
              <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
            </ul>
          </li>
        </ul>
      operationId: utility-gcs-access-token
      tags:
        - Utility
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: Seismic store path in the format sd://tenant/sub-project.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://common/carbon
        - description: Readonly access, true(default) or false.
          in: query
          name: readonly
          schema:
            type: boolean
      responses:
        "200":
          description: The GCS access token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /utility/upload-connection-string:
    get:
      summary: Generate the upload connection credentials string
      description: "<ul>
                      <li>Generate the upload connection credential string for a subproject collection or a dataset, depending of the applied access policy (uniform/dataset).
                      <li>These credentials can be used via CSP SDK, on client side, to perform bulk upload.</li>
                      <li>
                        The endpoint response is CSP (Cloud Solution Provider) dependent:
                        <ul>
                          <br/><li><b>Azure</b>: shared access signature (SaS) Url token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'SasUrl'
                            <br/>}
                          <br/><br/></li>
                          <li><b>Google</b>: standard access token credential signed and down-scoped by google
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'google_signed_access_token'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3600
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                          <li><b>AWS</b>: double column separated string containing access key id, the access key secret and the session token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'accessKeyId:secretAccessKey:sessionToken'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                          <li><b>IBM</b>: double column separated string containing access key id, the access key secret and the session token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'accessKeyId:secretAccessKey:sessionToken'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 7200
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                        </ul>
                      </li>
                      <li>Required roles:
                        <ul>
                          <li>subproject.admin: if the applied subproject policy is 'uniform'</li>
                          <li>dataset.admin: if the applied subproject policy is 'dataset'</li>
                        </ul>
                      </li>
                    </ul>"
      operationId: utility-upload-connection-string
      tags:
        - Utility
      parameters:
        - description: The impersonation token context (required only with impersonation
            token credentials)
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: "Seismic store path in the format sd://tenant/subproject (for uniform applied policies) or sd://tenant/subproject/dataset (for dataset applied policies)"
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://opendes/sandbox
      responses:
        "200":
          description: The upload connection credential string.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /utility/download-connection-string:
    get:
      summary: Generate the download connection credentials string
      description: "<ul>
                      <li>Generate the download connection credential string for a subproject collection or a dataset, depending of the applied access policy (uniform/dataset).
                      <li>These credentials can be used via CSP SDK, on client side, to perform bulk download.</li>
                      <li>
                        The endpoint response is CSP (Cloud Solution Provider) dependent:
                        <ul>
                          <br/><li><b>Azure</b>: shared access signature (SaS) Url token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'https://{accountName}.blob.core.windows.net/{containerName}?{SASQueryParameters}`'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'SasUrl'
                            <br/>}
                          <br/><br/></li>
                          <li><b>Google</b>: standard access token credential signed and down-scoped by google
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'google_signed_access_token'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3600
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                          <li><b>AWS</b>: double column separated string containing access key id, the access key secret and the session token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'accessKeyId:secretAccessKey:sessionToken'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 3599
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                          <li><b>IBM</b>: double column separated string containing access key id, the access key secret and the session token
                          <br/>
                            <br/>{
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_token: 'accessKeyId:secretAccessKey:sessionToken'
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires_in: 7200
                              <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;token_type: 'Bearer'
                            <br/>}
                          <br/><br/></li>
                        </ul>
                      </li>
                      <li>Required roles:
                        <ul>
                          <li>subproject.admin, subproject.viewer: if the applied subproject policy is 'uniform'</li>
                          <li>dataset.admin, dataset.viewer: if the applied subproject policy is 'dataset'</li>
                        </ul>
                      </li>
                    </ul>"
      operationId: utility-download-connection-string
      tags:
        - Utility
      parameters:
        - description: "The impersonation token context (required only with impersonation token credentials)"
          in: header
          name: impersonation-token-context
          required: false
          schema:
            type: string
            default: ""
        - description: "Seismic store path in the format sd://tenant/subproject (for uniform applied policies) or sd://tenant/subproject/dataset (for dataset applied policies)"
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://opendes/sandbox
      responses:
        "200":
          description: The download connection credential string.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /imptoken:
    post:
      summary: Generate impersonation credentials token.
      description: |
        <ul>
        <li>Generate an impersonation credential token of a user for a set of subproject resources.</li>
        <li>Required roles: app.trusted</li></ul>
      operationId: imptoken-generate
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImpTokenRequest"
        description: Request body
        required: true
      responses:
        "200":
          description: Generated a impersonation credentials token successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImpersonationToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    put:
      summary: Refresh an impersonation credential token.
      description: "<ul><li>Refresh an impersonation credential token.</li><li>Required roles: none</li></ul>"
      security:
        - bearer: []
      operationId: imptoken-refresh
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
        description: Request body
        required: true
      responses:
        "200":
          description: Refreshed impersonation credential token successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImpersonationToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    patch:
      summary: "Patch an impersonation credential token's refresh url and generate a new impersonation token."
      description: |
        <ul>
        <li>Patch an impersonation credential token's refresh url and generate a new impersonation token.</li>
        <li>Required roles: none</li></ul>
      operationId: imptoken-patch
      tags:
        - Impersonation Token (Obsolete)
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImpTokenPatchRequest"
        description: Request body
        required: true
      responses:
        "200":
          description: Generated impersonation token successfully and its refresh url is
            updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImpersonationToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /impersonation-token:
    post:
      summary: Create an impersonation token credential.
      description: "<ul><li>Generate a credential token to impersonate user access for a set of subproject resources.</li><li>Required roles: app.trusted</li></ul>"
      operationId: impersonation-token-generate
      tags:
        - Impersonation Token
      parameters:
        - description: The credential of the user to impersonate.
          in: header
          name: user-token
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImpersonationTokenRequest"
        description: Request body.
        required: true
      responses:
        "200":
          description: The impersonation token has been successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImpersonationToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    put:
      summary: Refresh the impersonation credential token.
      description: "<ul><li>Refresh an impersonation credential token.</li><li>Required roles: app.trusted</li></ul>"
      operationId: impersonation-token-refresh
      tags:
        - Impersonation Token
      parameters:
        - description: The impersonation token to refresh.
          in: header
          name: impersonation-token
          required: true
          schema:
            type: string
            default: ""
        - description: The impersonation token context.
          in: header
          name: impersonation-token-context
          required: true
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Refreshed impersonation credential token successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImpersonationToken"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /subproject/tenant/{tenantid}/subproject/{subprojectid}:
    post:
      summary: Create a new subproject.
      description: |
        <ul>
        <li>Creates a new subproject resource in seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: subproject-create
      tags:
        - SubProject
      parameters:
        - description: 'A valid compliance legal tag. It can be generated and managed via core-compliance-service.'
          in: header
          name: ltag
          schema:
            type: string
        - description: 'The subproject name. It must match the regex <b>^[a-z][a-z\d\-]*[a-z\d]$</b>'
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: The tenant name - In OSDU this match the data-partition-id
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubProjectCreateBody"
        description: Request body
        required: true
      responses:
        "200":
          description: The registered subproject.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubProject"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "409":
          description: Conflict.
    get:
      summary: Retrieve the subproject metadata.
      description: "<ul><li>Return the metadata for a requested sub-project.</li><li>Required roles: subproject.admin</li></ul>"
      operationId: subproject-get
      tags:
        - SubProject
      parameters:
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: translate the user-id to a more human readable user info
          name: translate-user-info
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
      responses:
        "200":
          description: Retrieved subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubProject"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    delete:
      summary: Delete a subproject.
      description: "<ul><li>Delete a subproject in seismic store.</li><li>Required roles: users.datalake.admin</li></ul>"
      operationId: subproject-delete
      tags:
        - SubProject
      parameters:
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deletion of the subproject completed.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    patch:
      summary: Patch a subproject's metadata.
      description: |
        <ul>
          <li>Patch a subproject metadata in seismic store.</li>
          <li>Required roles: subproject.admin</li>
          <li>Possible actions:</li>
          <ul>
            <li>legal tag and/or ACLs groups can be patched by providing new values</li>
          </ul>
        </ul>
      operationId: subproject-patch
      tags:
        - SubProject
      parameters:
        - description: Legal tag of the subproject.
          in: header
          name: ltag
          required: true
          schema:
            type: string
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
        - description: Name of the subproject.
          in: path
          name: subprojectid
          required: true
          schema:
            type: string
        - description: "True if the legal tags of all datasets in a subproject needs to be updated."
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubProjectPatchBody"
        description: Request body
      responses:
        "200":
          description: Updated subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubProject"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /subproject/tenant/{tenantid}:
    get:
      summary: List subprojects in a tenant.
      description: "<ul><li>Return the list of sub-projects in a tenant.</li><li>Required roles: users.datalake.admin</li></ul>"
      operationId: subproject-list
      tags:
        - SubProject
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved the list of subprojects in the tenant successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubProject"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /tenant/{tenantid}:
    post:
      summary: Register a seismic-dms tenant.
      description: "<ul><li>Register a data partition in seismic-dms.</li><li>Required roles: users.datalake.admin</li></ul>"
      operationId: tenant-create
      tags:
        - Tenant
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantCreateBody"
        description: Request body
        required: true
      responses:
        "200":
          description: Creation of the tenant was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
        "409":
          description: Conflict.
    get:
      summary: Retrieve the tenant metadata.
      description: "<ul><li>Return the tenant metadata.</li><li>Required roles: seistore.system.admin</li></ul>"
      operationId: tenant-get
      tags:
        - Tenant
      parameters:
        - description: Name of the tenant.
          in: path
          name: tenantid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved subproject metadata successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /tenant/sdpath:
    get:
      summary: Retrieve the tenant seismic store path.
      description: "<ul><li>Return the seistore path to a tenant associated with the data partition.</li><li>Required roles: none</li></ul>"
      operationId: tenant-sdpath
      tags:
        - Tenant (Obsolete)
      parameters:
        - description: Datapartition of the tenant.
          in: query
          name: datapartition
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Seismic store path to the tenant retrieved successfully.
          content:
            application/json:
              schema:
                type: string
                example: sd://tenant01
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /user:
    put:
      summary: Add a user to a seismic store subproject authorization group.
      description: "<ul><li>Add a user to a subproject default authorization group if it exists, otherwise, add the user to the first group.</li><li>Required roles: subproject.admin</li></ul>"
      operationId: user-add
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAddRequest"
        description: Request body
        required: true
      responses:
        "200":
          description: User was successfully added to a sub-project authorization group.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    get:
      summary: List users in a subproject's role-based authorization groups.
      description: "<ul><li>List users in subproject's role-based authorization groups.</li><li>Required roles: subproject.admin</li></ul>"
      operationId: user-list
      tags:
        - Users
      parameters:
        - description: Seismic store path, sd://tenant/sub-project.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved sub-project users in admin and viewer groups
            successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
                  example:
                    - userA@email
                    - admin
                example:
                  - - userA@email
                    - admin
                  - - userB@email
                    - viewer
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    delete:
      summary: Remove a user from a subproject.
      description: "<ul><li>Remove a user from subproject default authorization groups if exists, otherwise, remove it from the first authorization group.</li><li>Required roles: subproject.admin</li></ul>"
      operationId: user-remove
      tags:
        - Users
      parameters:
        - name: email
          in: query
          description: Email of the user to remove.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: Path of the subproject.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion of user from a subproject.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: Not found.
  
  /user/roles:
    get:
      summary: Retrieve user role in all subprojects of the tenant.
      description: "<ul><li>Retrieve user role in all subprojects of the tenant.</li><li>Required roles: none/li></ul>"
      operationId: user-roles
      tags:
        - Users
      parameters:
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved user roles in all subprojects of the tenant.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRoles"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /app:
    post:
      summary: Register a new application.
      description: "<ul><li>Register a new application in the seismic store.</li><li>Required roles: users.datalake.admin</li></ul>"
      operationId: app-register
      tags:
        - Apps
      parameters:
        - description: Service account email of the application.
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Registration of the application was successful.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    get:
      summary: Retrieve the list of registered applications.
      description: |
        <ul>
        <li>Retrieve the list of the registered applications in the seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: app-list
      tags:
        - Apps
      parameters:
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
            default: sd://common
      responses:
        "200":
          description: Retrieved a list of all the registered applications successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - app01@email
                  - app02@email
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /app/trusted:
    post:
      summary: Set a registered application as a trusted application.
      description: |
        <ul>
        <li>Set a registered application as a trusted application in the seismic store.</li>
        <li>Required roles: users.datalake.admin</li></ul>
      operationId: trustedapp-register
      tags:
        - Apps
      parameters:
        - description: Service account email of the application.
          in: query
          name: email
          required: true
          schema:
            type: string
        - description: Seismic store tenant path, sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Marking the application as a trusted application was successful.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
    get:
      summary: List the trusted applications in a seismic store tenant.
      description: |
        <ul>
        <li>Return the list of the trusted application in seismic store tenant.
        </li><li>Required roles: users.datalake.admin</li></ul>
      operationId: trustedapp-list
      tags:
        - Apps
      parameters:
        - description: Seismic store tenant path in the format sd://tenant.
          in: query
          name: sdpath
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved the list of all the trusted applications in the tenant.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - app01@email
                  - app02@email
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /operation/bulk-delete:
    put:
      summary: delete all datasets in a subproject path.
      description: "<ul>
                      <li>Description: delete all datasets in the specified sdms subproject path.</li>
                      <li>Roles: subproject.admin</li></ul>"
      operationId: operation-bulk-delete-push
      tags:
        - Operations
      parameters:
        - description: "The sdms subproject path as sd://tenant/subproject/(path)
            <ul>
              <li>The sdms subproject path must end with '/' as sd://tenant/subproject/a/b/c/</li>
              <li>The dataset must end with dataset name as sd://tenant/subproject/a/b/c/dataset</li>
            </ul>"
          in: query
          name: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetBulkDeleteBody"
        required: false
      responses:
        "202":
          description: Delete operation initiated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
  /operation/bulk-delete/{operation-id}:
    get:
      summary: get the bulk delete operation status.
      description: "<ul>
                      <li>Description: get the bulk delete operation status.</li>
                      <li>Roles: any (registered user in partition)</li></ul>"
      operationId: operation-bulk-delete-get
      tags:
        - Operations
      parameters:
        - description: "The bulk delete operation id"
          in: path
          name: operation-id
          required: true
          schema:
            type: string
        - description: "Data partition id"
          in: header
          name: data-partition-id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved the delete operation successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationStatus"
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
  
# ===========================================================================
# Endpoints Models Section
# ===========================================================================

security:
  - bearer: []
components:
  requestBodies:
    DatasetCheckList:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DatasetCheckList"
      description: Request body
      required: true
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Status:
      required:
        - status
      properties:
        status:
          type: string
      example:
        status: running
    Info:
      required:
        - info
      properties:
        group_id:
          type: string
        artifact_id:
          type: string
        build_time:
          type: string
        connected_outer_services:
          type: array
      example:
        info:
          group_id: org.opengroup.osdu.sdms.v3
          artifact_id: sdms-v3
          build_time: 2024-03-05T14:03:48.865Z
          connected_outer_services: []
    DatasetListBody:
      type: object
      properties:
        type:
          type: string
        gtags:
          type: array
          items:
            type: string
          description: Array of global tags associated with the dataset metadata. Once
            assigned, they can be used to filter datasets.
        search:
          type: string
        filter:
          type: object
        limit:
          type: number
          description: the maximum number of datasets in the response
        cursor:
          type: string
          description: the cursor value required to retrieve the next page of result
      example:
        limit: "10"
        select: "[name, path, created_by]"
        filter: {"and":[{"or": [{"property":"gtags","operator":"CONTAINS","value":"tagA"}, {"property":"gtags","operator":"CONTAINS","value":"tagC"}]},{"property":"name","operator":"LIKE","value":"W%"}, {"not": {"property":"gtags","operator":"CONTAINS","value":"tagB"}}]}
        cursor: next-page-token-931fvm19vm1-vm1v1
    DatasetLsBody:
      type: object
      required:
        - sdpath
      properties:
        sdpath:
          type: string
          description: "the seismic dms path uri: sd://tenant or sd://tenant/subproject or sd://tenant/subproject/path."
        wmode:
          type: string
          description: "the endpoint working mode: dirs, datasets, all (default if not specified)."
        limit:
          type: number
          description: "the max response datasets number."
        cursor:
          type: string
          description: "the next page cursor."
      example:
        sdpath: "sd://test-tenant/test-subproject/test-path"
        wmode: "all"
        limit: 10
        cursor: next-page-token-931fvm19vm1-vm1v1
    DatasetRegisterBody:
      type: object
      properties:
        type:
          type: string
        gtags:
          type: array
          description: Array of global tags associated with the dataset metadata. Once
            assigned, they can be used to filter datasets.
          items:
            type: string
        seismicmeta:
          type: object
          properties:
            kind:
              type: string
            data:
              type: object
              properties: {}
          description: Seismic metadata to be stored as dataecosystem storage record.
        openzgy_v1:
          $ref: ../schemas/openzgy/FileCollection.Slb.OpenZGY.1.0.0.json
        segy_v1:
          $ref: ../schemas/segy/FileCollection.SEGY.1.0.0.json
        acls:
          type: object
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
          description: ACLs with admin groups and viewer groups for the dataset.
      example:
        gtags:
          - tagA
          - tagB
          - tagC
        seismicmeta:
          kind: osdu:sdms:seismic3d:1.0.0
          legal:
            legaltags:
              - legal-tag
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          $ref: ../schemas/openzgy/example.json
        segy_v1:
          $ref: ../schemas/segy/example.json
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    Dataset:
      required:
        - name
        - tenant
        - subproject
        - path
        - created_by
        - created_date
        - last_modified_date
        - gcsurl
        - ctag
      properties:
        name:
          type: string
          description: Name of the dataset.
        tenant:
          type: string
          description: Name of the tenant.
        subproject:
          type: string
          description: Name of the subproject.
        path:
          type: string
          description: Path to the dataset inside a subproject.
        created_by:
          type: string
          description: Creator of the dataset.
        created_date:
          type: string
          description: Date when the dataset was created.
        last_modified_date:
          type: string
          description: Date when the dataset was last modified.
        filemetadata:
          type: object
          description: Number of objects and the size in bytes of the dataset.
        metadata:
          type: object
          description: Generic information stored as key,value pairs for the dataset.
        gcsurl:
          type: string
          description: Cloud storage object identifier.
        readonly:
          type: boolean
          description: True if the dataset is readonly.
        status:
          type: string
          description: The dataset status (if set).
        ltag:
          type: string
          description: Legal tag associated with the dataset.
        ctag:
          type: string
          description: The coherency tag associated with the dataset. (It changes every
            time the dataset is updated.)
        seismicmeta_guid:
          type: string
          description: Seismic storage record identifier.
        sbit:
          type: string
          description: The session lockID.
        sbit_count:
          type: number
          description: The number of sessions associated to the dataset.
        seismicmeta:
          type: object
          description: Seismic metadata associated with the dataset which is used to create
            a data ecosystem storage record.
          properties:
            kind:
              type: string
            data:
              type: object
        openzgy_v1:
          $ref: ../schemas/openzgy/FileCollection.Slb.OpenZGY.1.0.0.json
        segy_v1:
          $ref: ../schemas/segy/FileCollection.SEGY.1.0.0.json
      example:
        name: dsx01
        tenant: geosolution
        subproject: spx01
        path: /a/b/c
        created_by: user@gtest.com
        created_date: Thu Jul 16 2020 04:30:41 GMT+0000 (Coordinated Universal Time)
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal Time)
        metadata:
          k1: v1
          k2: v2
          k3:
            k4: v4
        gcsurl: gs://sd_geosolution_spx01/12341234
        type: segy
        readonly: false
        filemetadata:
          size: 10737418240
          type: GENERIC
          nobjects: 160
        ltag: legal-tag
        ctag: 1234567890abcdefg
        seismicmeta_guid: slb:seismic:1234abcd5678efgh
        sbit: Wx53vrogk0gr4ao
        sbit_count: 1
        seismicmeta:
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
              - legal-tag
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          $ref: ../schemas/openzgy/example.json
        segy_v1:
          $ref: ../schemas/segy/example.json
    DatasetPatch:
      properties:
        dataset_new_name:
          type: string
          description: New name for the dataset.
        metadata:
          type: object
          description: Generic information about the dataset stored as key value pairs.
        filemetadata:
          type: object
          description: Number of objects and the size in bytes of the dataset.
        last_modified_date:
          type: string
          description: Date when the dataset was last modified.
        gtags:
          type: array
          description: Array of tags associated with the dataset. After patching these
            tags, they can be used to filter the datasets.
          items:
            type: string
          default: []
        ltag:
          type: string
          description: Legal tag associated with the dataset.
        readonly:
          type: boolean
          description: True if the dataset is read only.
        status:
          type: string
          description: The status of the dataset (if set)
        seismicmeta:
          type: object
          description: Seismic metadata associated with the dataset which is used to create
            a data ecosystem storage record.
          properties:
            kind:
              type: string
            data:
              type: object
        openzgy_v1:
          $ref: ../schemas/openzgy/FileCollection.Slb.OpenZGY.1.0.0.json
        segy_v1:
          $ref: ../schemas/segy/FileCollection.SEGY.1.0.0.json
        acls:
          type: object
          description: ACLs with admin groups and viewer groups for the dataset.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        dataset_new_name: dsx02
        metadata:
          f1: v1
          f2: v2
          f3: v3
        filemetadata:
          f1: v1
          f2: v2
          f3: v3
        last_modified_date: Thu Jul 16 2020 04:37:41 GMT+0000 (Coordinated Universal Time)
        gtags:
          - tag01
          - tag02
          - tag03
        ltag: legal-tag
        readonly: false
        seismicmeta:
          kind: slb:seistore:seismic2d:1.0.0
          legal:
            legaltags:
              - Slb-Private-USA-EHC
            otherRelevantDataCountries:
              - US
          data:
            msg: sample data
        openzgy_v1:
          $ref: ../schemas/openzgy/example.json
        segy_v1:
          $ref: ../schemas/segy/example.json
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    DatasetPermission:
      required:
        - read
        - write
        - delete
      properties:
        read:
          type: boolean
          description: True if the user has read permission on the dataset.
        write:
          type: boolean
          description: True if the user has write permission on the dataset.
        delete:
          type: boolean
          description: True if the user has delete permission on the dataset.
      example:
        read: true
        write: false
        delete: false
    DatasetAndDirectories:
      required:
        - datasets
        - directories
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
        directories:
          type: array
          description: Array of directories inside the subproject.
          items:
            type: string
      example:
        datasets:
          - /a/b/c/dsx01
          - /a/b/c/dsx02
        directories:
          - /a/b/c/d
          - /a/b/c/e
    DatasetCheckList:
      required:
        - datasets
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
      example:
        datasets:
          - a/b/c/dsx01
          - a/b/c/dsx02
    DatasetBulkDeleteBody:
      type: object
      properties:
        filter:
          type: object
          description: Optional structured query filter to restrict the datasets to be deleted.
      example:
        filter: {"and":[{"or": [{"property":"gtags","operator":"CONTAINS","value":"tagA"}, {"property":"gtags","operator":"CONTAINS","value":"tagC"}]},{"property":"name","operator":"LIKE","value":"W%"}, {"not": {"property":"gtags","operator":"CONTAINS","value":"tagB"}}]}
    AccessToken:
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: connection string credentials or standard access token (CSP
            dependent)
        token_type:
          type: string
          description: token type (Bearer, SasUrl, ....).
        expires_in:
          type: number
          description: expiration time (in minutes) of the connection string credentials
      example:
        access_token: header.payload.signature
        token_type: Bearer
        expires_in: 3600
    ImpersonationToken:
      required:
        - impersonation_token
        - token_type
        - expires_in
        - context
      properties:
        impersonation_token:
          type: string
          description: The Impersonation token.
        token_type:
          type: string
          description: Token type.
        expires_in:
          type: number
          description: Token expiration time.
        context:
          type: string
          description: the Impersonation token context.
      example:
        impersonation_token: string
        token_type: Bearer
        expires_in: 3600
        context: string
    Resource:
      required:
        - resource
      properties:
        resource:
          type: string
        readonly:
          type: boolean
    ImpersonationTokenRequest:
      required:
        - resources
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/Resource"
        metadata:
          type: object
          description: A general field to set extra meta-information to the impersonation
            token signature. These are saved along with the token signatures.
      example:
        resources:
          - resource: sd://tnx01/spx01
            readonly: true
          - resource: sd://tnx01/spx02
            readonly: false
        metadata:
          jobId: 1234
    ImpTokenRequest:
      required:
        - token
        - resources
        - refresh-url
      properties:
        token:
          type: string
          description: Impersonation token that was previously issued.
        resources:
          type: array
          items:
            $ref: "#/components/schemas/Resource"
        refresh-url:
          type: string
          description: A web service endpoint that the seismic store service will invoke to
            check if the impersonation token can be refreshed.
      example:
        token: string
        resources:
          - resource: sd://tnx01/spx01
            readonly: true
          - resource: sd://tnx01/spx02
            readonly: false
          - resource: sd://tnx01/spx03
        refresh-url: https://httpstat.us/200
    ImpTokenPatchRequest:
      required:
        - token
        - refresh-url
      properties:
        token:
          type: string
          description: Impersonation token that was previously issued.
        refresh-url:
          type: string
          description: New endpoint that the seismic store service will invoke to check if
            the impersonation token can be refreshed.
      example:
        token: string
        refresh-url: https://httpstat.us/200
    RefreshTokenRequest:
      required:
        - token
      properties:
        token:
          type: string
          description: Impersonation token
      example:
        token: string
    SubProjectCreateBody:
      properties:
        admin:
          type: string
          description: An optional user to set as admin. The user will be added in the
            first admins acl group
        storage_class:
          type: string
          description: Storage class for the bucket (Google Required Only)
        storage_location:
          type: string
          description: Storage location for the bucket (Google Required Only)
        access_policy:
          type: string
          description: 'The datasets access level mode: "uniform" (uniform data access to
            all subprojects datasets) or "datasets" (acl can be applied at
            dataset level)'
          default: uniform
          enum:
            - uniform
            - dataset
        acls:
          type: object
          description: The entitlement groups to enable subproject access as admin or
            viewer. If not specified, default entitlement data groups will be
            created.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        admin: admin@email
        storage_class: MULTI_REGIONAL
        storage_location: US
        access_policy: uniform
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    SubProjectPatchBody:
      properties:
        access_policy:
          type: string
          description: Access Policy for the subproject.
          default: dataset
        acls:
          type: object
          description: ACLs with admin groups and viewer groups. Existing acls will be
            replaced with the provided acls.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        access_policy: dataset
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
            - data.sdms.tenant.subproject.1f1tr7fe-fb0e-402a-b725-606723e5356n.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    SubProject:
      required:
        - name
        - tenant
        - storage_class
        - storage_location
        - ltag
        - access_policy
      properties:
        name:
          type: string
          description: Name of the subproject.
        tenant:
          type: string
          description: Name of the tenant.
        storage_class:
          type: string
          description: Storage class for the bucket.
        storage_location:
          type: string
          description: Storage location for the bucket.
        ltag:
          type: string
          description: Legal tag for the subproject.
        access_policy:
          type: string
          description: Access policy for the subproject.
          default: uniform
          enum:
            - uniform
            - dataset
        acls:
          type: object
          description: ACLs with admin groups and viewer groups for the subproject.
          properties:
            admins:
              type: array
              items:
                type: string
            viewers:
              type: array
              items:
                type: string
      example:
        name: spx01
        tenant: tnx01
        storage_class: MULTI_REGIONAL
        storage_location: US
        admin: test@email
        ltag: Slb-Private-USA-EHC
        gcs_bucket: subproject-bucket
        acls:
          admins:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.admin@slb.p4d.cloud.slb-ds.com
          viewers:
            - data.sdms.tenant.subproject.1b1417e5-fb0e-402a-b725-606723e50b76.viewer@slb.p4d.cloud.slb-ds.com
    TenantCreateBody:
      required:
        - gcpid
        - esd
        - default_acls
      properties:
        gcpid:
          type: string
          description: Google cloud project id associated with the tenant. For other
            providers, name of the data partition.
        esd:
          type: string
          description: Entitlements group Sub Domain (ESD). For instance, if the
            entitlements group is
            users.datalake.viewers@{datapartition}.{domain}.com, the esd value
            is {datapartition}.{domain}.com. It must start with the name of the
            data partition.
        default_acls:
          type: string
          description: Entitlements authorization group to manage tenant administrators.
      example:
        gcpid: datapartition
        esd: "{datapartition}.{domain}.com"
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
    Tenant:
      required:
        - name
        - esd
        - gcpid
        - default_acls
      properties:
        name:
          type: string
          description: Name of the tenant.
        esd:
          type: string
          description: Entitlements group Sub Domain (ESD). For instance, if the
            entitlements group is
            users.datalake.viewers@{datapartition}.{domain}.com, the esd value
            is {datapartition}.{domain}.com. It has to start with the name of
            the data partition.
        gcpid:
          type: string
          description: Google cloud project id associated with the tenant. For other
            providers, name of the data partition.
        default_acls:
          type: string
          description: Entitlements authorization group to manage tenant administrators.
      example:
        name: datapartition
        esd: "{datapartition}.{domain}.com"
        gcpid: datapartition
        default_acls: users.datalake.admins@{datapartition}.{domain}.com
    UserAddRequest:
      required:
        - email
        - path
        - group
      properties:
        email:
          type: string
          description: Email address of the user. Note that this field is used as a
            principal identifier for entitlements-svc and can be configured using the
            env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS
            runtime.
        path:
          type: string
          description: Seismic store path in the format sd://tenant/subproject.
        group:
          type: string
          description: Role to be assigned to the user.
          enum:
            - viewer
            - admin
      example:
        email: test@slb.com
        path: sd://slb/test_project
        group: admin
    UserRemoveRequest:
      required:
        - email
        - path
      properties:
        email:
          type: string
          description: Email address of the user. Note that this field is used as a
            principal identifier for entitlements-svc and can be configured using the
            env variable USER_ID_CLAIM_FOR_ENTITLEMENTS_SVC in the Seismic DMS
            runtime.
        path:
          type: string
          description: Seismic store path in the format sd://tenant/subproject.
      example:
        email: test@email
        path: sd://slb/test_project
    UserRoles:
      required:
        - roles
      properties:
        roles:
          type: array
          description: Array of arrays with each array containing subproject and role of
            the user for the subproject.
          items:
            type: array
            items:
              type: string
            example:
              - /spx01
              - admin
          example:
            - - /spx01
              - admin
            - - /spx02
              - viewer
    LsDatasets:
      type: array
      description: Array of directories and datasets inside a subproject.
      items:
        type: string
      example:
        - folderA/
        - folderB/
        - dataset01
        - dataset02
        - dataset03
    LsPaginatedDatasets:
      required:
        - datasets
        - nextPageCursor
      properties:
        datasets:
          type: array
          description: Array of datasets inside the subproject.
          items:
            type: string
        nextPageCursor:
          type: string
          description: Next cursor for pagination.
      example:
        datasets:
          - folderA/
          - folderB/
          - dataset01
        nextPageCursor: abc1234
    PaginatedDatasets:
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/Dataset"
        nextPageCursor:
          type: string
          example: next-page-token-3rt431v41-4515351
    DatasetSize:
      required:
        - computed_size
        - computed_size_date
      properties:
        computed_size:
          type: number
          description: The size of the dataset in bytes..
        computed_size_date:
          type: string
          description: The date of when the dateset size was computed.
      example:
        computed_size: "35461"
        computed_size_date: Thu Mar 16 2023 16:16:40 GMT-0500 (Central Daylight Time)
    ComputedSize:
      required:
        - size_bytes
        - dataset_count
      properties:
        size_bytes:
          type: number
          description: The size of the datasets in bytes.
        dataset_count:
          type: number
          description: The number of datasets in the path (including nested folders).
      example:
        size_bytes: 35461
        dataset_count: 2
    Operation:
      required:
        - operation_id
      properties:
        operation_id:
          type: string
          description: Operation id of the operation job.
      example:
        operation_id: c3d282e6-e7d1-40d8-8ac2-edc15b6d174c
    OperationStatus:
      required:
        - operation_id
        - status
      properties:
        operation_id:
          type: string
          description: Operation id of the operation job.
        created_at:
          type: string
          description: Time when the operation was initiated.
        created_by:
          type: string
          description: User who initiated the operation job.
        last_updated_at:
          type: string
          description: Time when the operation status was last updated.
        status:
          type: string
          description: Status of the operation job.
        dataset_cnt:
          type: number
          description: Total number of datasets to process.
        completed_cnt:
          type: number
          description: Number of datasets correctly processed.
        failed_cnt:
          type: number
          description: Number of datasets which processing failed.
      example:
        operation_id: c3d282e6-e7d1-40d8-8ac2-edc15b6d174c
        created_at: string
        created_by: string
        last_updated_at: string
        status: Completed
        dataset_cnt: 1000
        completed_cnt: 997
        failed_cnt: 3
